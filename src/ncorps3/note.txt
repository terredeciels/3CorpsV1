//    private static void image(byte[] preimg) throws IOException {
//        int width = DimXYZ;
//        int height = DimXYZ;
//
//        DataBuffer buffer = new DataBufferByte(preimg, preimg.length);
//        //3 bytes per pixel: red, green, blue
//        WritableRaster raster = Raster.createInterleavedRaster(buffer, width, height,
//                3 * width, 3, new int[]{0, 1, 2}, null);
//        ColorModel cm = new ComponentColorModel(ColorModel.getRGBdefault().getColorSpace(), false,
//                true, Transparency.OPAQUE, DataBuffer.TYPE_BYTE);
//        BufferedImage image = new BufferedImage(cm, raster, true, null);
//        ImageIO.write(image, "png", new File("image.png"));
//        // ImageIO.write(image, "png", new File("image.png"));
//    }
//
//    private static void convert3DTo2DToInt(Initialisation init) throws IOException {
//        Corps[][] I = init.NCorpsT0;
//        boolean[][] coord = new boolean[DimXYZ][DimXYZ];
//        for (int n = 0; n < 3; n++) {
//            double[] param = I[n][0].getParam();
////            int X = (int) (param[0] / param[2]);
////            int Y = (int) (param[1] / param[2]);
//            int X = (int) (param[0]);
//            int Y = (int) (param[1]);
//            System.out.print(X);
//            System.out.print(" ; ");
//            System.out.print(Y);
//            System.out.println(" ; ");
//            coord[X][Y] = true;
//
//
//        }
//        byte[] preimg = new byte[3 * DimXYZ * DimXYZ];
//        int k = 0;
//        for (int i = 0; i < DimXYZ; i++) {
//            for (int j = 0; j < DimXYZ; j++) {
//                if (!coord[i][j]) {
//                    preimg[k] = (byte) 0xff;
//                    preimg[k++] = (byte) 0xff;
//                    preimg[k++] = (byte) 0xff;
//                } else {
//                    preimg[k] = 0x0;
//                    preimg[k++] = 0x0;
//                    preimg[k++] = 0x0;
//                }
//                k++;
//            }
//
//        }
//        image(preimg);
//    }

//
//    static void print(Initialisation init, int n) {
//        Corps[][] I = init.NCorpsT0;
//        for (int t = 0; t < Tmax; t++) {
//            double[] param = I[n][t].getParam();
//            System.out.print(param[0]);
//            System.out.print(" ; ");
//            System.out.print(param[1]);
//            System.out.print(" ; ");
//            System.out.print(param[2]);
//            System.out.println(" ; ");
//        }
//
//    }